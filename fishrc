
## set environment
if uname -a | rg -i Darwin > /dev/null
	set env 'apple'
else if uname -a | rg -i  'Debian' > /dev/null
	set env 'deb'
else if uname -a | rg -i  'Ubuntu' > /dev/null
	set env 'ubu'
else if uname -a | rg -i  'Arch' > /dev/null
	set env 'arch'
end



###  ALIAS ###

alias cls='clear'
alias up='cd ..'
alias shut='shutdown --poweroff now'
alias rebt='shutdown --reboot now'
alias lo="lolcat -F 0.05 -p 10 -f"
alias new='install -m 755 /dev/null '
alias ls='exa -lh'
alias ra='ranger'
alias gitg='git log --all --graph --decorate --oneline'
alias gitst='git status '
alias gitc="git commit -m " 
alias gita='git add . ;and git commit -m'


alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

alias cpp='cppcheck --enable=style,warning'
alias she='shellcheck'
alias lsize='exa --sort=size --reverse -lh'
alias do='doas -- '
alias del='trash-put'
alias rg='rg --pcre2 -i'
alias tl='tldr'
alias py='python3 '
alias cl='clang -std=c11 -Wall '
alias j="autojump "


switch $env
	case apple
		alias appin="brew install"
		alias appup="brew update;and brew upgrade"
		alias appls="brew list"
	case deb ubu
		alias appin="sudo apt install"
		alias appup="sudo apt update;and sudo apt upgrade"
		alias appls="sudo apt list"
	case arch
		alias appin="sudo pacman -S"
		alias appup="sudo pacman -Syyu"
end
		
		

if uname -a | rg -i Darwin > /dev/null
else if  uname -a | rg -i "Debian|Ubuntu"
end


alias gr="go run"
alias gb="go build" 


function cc
	clang -Wall  -o $argv[1] $argv[1].c
end

function cc++
	clang++ -Wall -o $argv[1] $argv[1].cc
end




#fzf 

export  FZF_DEFAULT_COMMAND='fd -H'
export FZF_DEFAULT_OPTS='--layout=reverse --height 50% --border'
#export FZF_CTRL_T_OPTS="--preview (highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200"

#bat 
set -x BAT_THEME zenburn

#for compilation
function c_so
  clang -fpic -shared -o lib$argv[1].so $argv[1].c
end


set -u EDITOR vim
set -x MANPAGER "sh -c 'col -bx | bat -l man -p' "

#functions


function setup
	switch $env
		case apple arch
			appin rg fd bat sd & 
		case ubu
			appin ripgrep fd-find
	end
			

	if ! test -d ~/Repo
		mkdir ~/Repo
	end 
	cd ~/Repo
	git clone https://github.com/MyBeLoVedL/dotfiles.git
	cd dotfiles
	if ! test -e ~/.fishrc
		ln -s fishrc ~/.fishrc
	end 
	if ! test -e ~/.vimrc
		ln -s vimrc ~/.vimrc
	end 

	cp plug.vim ~/.vim/autoload/
end
	

function debug
  gcc -o $argv[1] -ggdb -O0 $argv[1].c
  gg -b chromium $argv[1]
end

set -x LS_COLORS "di=1;38;5;69:ex=1;38;5;72"
starship init fish | source

# go environment variables

set -x PATH $PATH ~/Apps/

set -x GO111MODULE on
set -x GOPROXY "https://goproxy.cn,direct"
set -x GOSUMDB "sum.golang.google.cn"
set GOROOT /usr/local/go
set GOPATH ~/go
set -x PATH $PATH /usr/local/go/bin
set -x PATH $PATH $GOPATH/bin


[ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish
[ -f "$HOME/.bytebm/config/fish.sh" ]; and source "$HOME/.bytebm/config/fish.sh"
